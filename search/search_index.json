{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Amazon Web Services (AWS) Fundamental AWS servies - Compute, Storage, Database and Network Compute In the context of AWS (Amazon Web Services), compute refers to the resources and services that enable you to run applications, process data, and execute tasks. Essentially, compute refers to the virtual machines (VMs), containers, or serverless functions that provide the processing power for your workloads. Amazon EC2 - Amazon Elastic Compute Cloud Storage In the context of AWS (Amazon Web Services), storage refers to the services and resources that allow you to store and manage data in the cloud. AWS offers a variety of storage options, each optimized for different types of data, use cases, and performance needs, such as storing files, databases, backups, or archives. Amazon S3 - Amazon Simple Storage Service","title":"AWS"},{"location":"#amazon-web-services-aws","text":"Fundamental AWS servies - Compute, Storage, Database and Network","title":"Amazon Web Services (AWS)"},{"location":"#compute","text":"In the context of AWS (Amazon Web Services), compute refers to the resources and services that enable you to run applications, process data, and execute tasks. Essentially, compute refers to the virtual machines (VMs), containers, or serverless functions that provide the processing power for your workloads. Amazon EC2 - Amazon Elastic Compute Cloud","title":"Compute"},{"location":"#storage","text":"In the context of AWS (Amazon Web Services), storage refers to the services and resources that allow you to store and manage data in the cloud. AWS offers a variety of storage options, each optimized for different types of data, use cases, and performance needs, such as storing files, databases, backups, or archives. Amazon S3 - Amazon Simple Storage Service","title":"Storage"},{"location":"ec2/","text":"Amazon Elastic Compute Cloud (EC2) It allows us to deploy virtual servers within the AWS environment. EC2 Components Amazon Machine Images (AMI): Pre configured EC2 instances that allow to quickly launch a new EC2 instance based on the config defined in the AMI. An AMI can help in auto scaling where multiple instances of the AMI can be quickly created. Instance Types: Defines the size of the instance based on different parameters - vCPUs, Architecture, Memory, Storage, Storage type, Network performance Instance purchasing options: On demand instances [can be launched anytime, can be used for as long as needed, flat rate based on instance types, typically used for short-term workloads], Spot Instances [on demand instances that are not taken currently, these are based on supply and demand], Reserved Instances [purchase a discounted on-demand instance for a set period], On-Demand Capacity Reservations [reserve capacity based on attribute] Tenancy: Shared Tenancy [by default, instances run on available hosts with selected resources], Dedicated Tenancy [runs on Dedicated Instances and Dedicated Hosts] Uesr Data: Allows to enter commands that will run during the first boot cycle of that instance. Storage Options: Persistent Storage [EBS Volumes, also can be taken a snapshot of and store in an Amazon S3 Bucket], Ephemeral Storage [Created by EC2 instances using local storage] Security: Security group is an instance level firewall that protects traffic from ingress and egress requests. Restrict communications using source ports and protocols. Key-Pair Login: Private key and Public key system Virtual Private Cloud (VPC) A VPC (Virtual Private Cloud) is a logically isolated section of a cloud provider\u2019s network. Isolation: Resources inside a VPC are isolated. Customization: We can customize the IP address range, subnets, routing and security settings like network access control list (ACL) and security groups. Security: Firewalls, Private Subnets and VPNs Network Config: We can configure routing tables, internet gateways and even peering connections. VPC Endpoint A VPC Endpoint allows you to privately connect your VPC to support AWS services (like S3, DynamoDB, etc.) without requiring an internet connection, NAT gateway, or VPN connection. CIDR (Classless Inter-Domain Routing) It is a method for assigning IP addresses and IP routing that allows more efficient and flexible allocation of IP addresses. It provides a way to define network addresses with variable-length subnet masks, enabling networks of different sizes to be created. CIDR notations are typically as - IP address/prefix length Subnet A subnet (short for subnetwork) is a logical division of an IP network into smaller, manageable parts. It allows you to break a larger network into smaller segments to improve performance, security, and manageability. Subnet Mask A subnet mask is used to separate the network portion of an IP address from the host portion. In CIDR notation, the subnet mask is directly related to the prefix length. For 192.168.0.0/24 , the subnet mask is written as 255.255.255.0 . IPV4 and IPV6 CIDR IPv4 addresses are 32 bits long, written in four octets (e.g., 192.168.0.1), which gives around 4.3 billion unique addresses. For example - 192.168.0.0/24 , This represents all IP addresses from 192.168.0.0 to 192.168.0.255 IPv6 addresses are 128 bits long, written in hexadecimal and separated by colons (e.g., 2001:0db8:85a3::8a2e:0370:7334). IPv6 can support a vastly larger number of addresses\u2014about 340 undecillion addresses. Routing Table In a routing table, the destination and target (sometimes called \"next hop\") columns are key components that determine how network traffic is routed. Destination Column: The destination column in the routing table specifies the destination network or destination IP address that the packet is trying to reach. Target Column: The target (or \"next hop\") column specifies where the packet should go next to reach the destination. The CIDR block must not be the same or larger than a destination CIDR range in a route in any of the VPC route tables. Internet Gateway (IGW) IGW is a component that helps VPCs connect with the internet or other external networks. It serves as the bridge between the private network (your VPC) and the public Internet. Bidirectional Traffic: The Internet Gateway allows instances within the VPC to send and receive traffic from the Internet. Public and Private IP Handling: For the Internet Gateway to work, instances in the VPC need either: Public IP address, Elastic IP address, NAT Gateways Network Address Translation (NAT) Gateway A NAT gateway enables instances within a private subnet in a VPC to access the internet for outbound traffic. The NAT gateway is a fully managed service provided by AWS, meaning AWS automatically takes care of scaling, fault tolerance, and maintenance. It can scale automatically to accommodate large amounts of traffic. Virtual Private Gateway (VGW) A Virtual Private Gateway (VGW) enables communication between an on-premises network and a cloud-based Virtual Private Cloud (VPC).","title":"AWS Compute"},{"location":"ec2/#amazon-elastic-compute-cloud-ec2","text":"It allows us to deploy virtual servers within the AWS environment.","title":"Amazon Elastic Compute Cloud (EC2)"},{"location":"ec2/#ec2-components","text":"Amazon Machine Images (AMI): Pre configured EC2 instances that allow to quickly launch a new EC2 instance based on the config defined in the AMI. An AMI can help in auto scaling where multiple instances of the AMI can be quickly created. Instance Types: Defines the size of the instance based on different parameters - vCPUs, Architecture, Memory, Storage, Storage type, Network performance Instance purchasing options: On demand instances [can be launched anytime, can be used for as long as needed, flat rate based on instance types, typically used for short-term workloads], Spot Instances [on demand instances that are not taken currently, these are based on supply and demand], Reserved Instances [purchase a discounted on-demand instance for a set period], On-Demand Capacity Reservations [reserve capacity based on attribute] Tenancy: Shared Tenancy [by default, instances run on available hosts with selected resources], Dedicated Tenancy [runs on Dedicated Instances and Dedicated Hosts] Uesr Data: Allows to enter commands that will run during the first boot cycle of that instance. Storage Options: Persistent Storage [EBS Volumes, also can be taken a snapshot of and store in an Amazon S3 Bucket], Ephemeral Storage [Created by EC2 instances using local storage] Security: Security group is an instance level firewall that protects traffic from ingress and egress requests. Restrict communications using source ports and protocols. Key-Pair Login: Private key and Public key system","title":"EC2 Components"},{"location":"ec2/#virtual-private-cloud-vpc","text":"A VPC (Virtual Private Cloud) is a logically isolated section of a cloud provider\u2019s network. Isolation: Resources inside a VPC are isolated. Customization: We can customize the IP address range, subnets, routing and security settings like network access control list (ACL) and security groups. Security: Firewalls, Private Subnets and VPNs Network Config: We can configure routing tables, internet gateways and even peering connections.","title":"Virtual Private Cloud (VPC)"},{"location":"ec2/#vpc-endpoint","text":"A VPC Endpoint allows you to privately connect your VPC to support AWS services (like S3, DynamoDB, etc.) without requiring an internet connection, NAT gateway, or VPN connection.","title":"VPC Endpoint"},{"location":"ec2/#cidr-classless-inter-domain-routing","text":"It is a method for assigning IP addresses and IP routing that allows more efficient and flexible allocation of IP addresses. It provides a way to define network addresses with variable-length subnet masks, enabling networks of different sizes to be created. CIDR notations are typically as - IP address/prefix length","title":"CIDR (Classless Inter-Domain Routing)"},{"location":"ec2/#subnet","text":"A subnet (short for subnetwork) is a logical division of an IP network into smaller, manageable parts. It allows you to break a larger network into smaller segments to improve performance, security, and manageability.","title":"Subnet"},{"location":"ec2/#subnet-mask","text":"A subnet mask is used to separate the network portion of an IP address from the host portion. In CIDR notation, the subnet mask is directly related to the prefix length. For 192.168.0.0/24 , the subnet mask is written as 255.255.255.0 .","title":"Subnet Mask"},{"location":"ec2/#ipv4-and-ipv6-cidr","text":"IPv4 addresses are 32 bits long, written in four octets (e.g., 192.168.0.1), which gives around 4.3 billion unique addresses. For example - 192.168.0.0/24 , This represents all IP addresses from 192.168.0.0 to 192.168.0.255 IPv6 addresses are 128 bits long, written in hexadecimal and separated by colons (e.g., 2001:0db8:85a3::8a2e:0370:7334). IPv6 can support a vastly larger number of addresses\u2014about 340 undecillion addresses.","title":"IPV4 and IPV6 CIDR"},{"location":"ec2/#routing-table","text":"In a routing table, the destination and target (sometimes called \"next hop\") columns are key components that determine how network traffic is routed. Destination Column: The destination column in the routing table specifies the destination network or destination IP address that the packet is trying to reach. Target Column: The target (or \"next hop\") column specifies where the packet should go next to reach the destination. The CIDR block must not be the same or larger than a destination CIDR range in a route in any of the VPC route tables.","title":"Routing Table"},{"location":"ec2/#internet-gateway-igw","text":"IGW is a component that helps VPCs connect with the internet or other external networks. It serves as the bridge between the private network (your VPC) and the public Internet. Bidirectional Traffic: The Internet Gateway allows instances within the VPC to send and receive traffic from the Internet. Public and Private IP Handling: For the Internet Gateway to work, instances in the VPC need either: Public IP address, Elastic IP address, NAT Gateways","title":"Internet Gateway (IGW)"},{"location":"ec2/#network-address-translation-nat-gateway","text":"A NAT gateway enables instances within a private subnet in a VPC to access the internet for outbound traffic. The NAT gateway is a fully managed service provided by AWS, meaning AWS automatically takes care of scaling, fault tolerance, and maintenance. It can scale automatically to accommodate large amounts of traffic.","title":"Network Address Translation (NAT) Gateway"},{"location":"ec2/#virtual-private-gateway-vgw","text":"A Virtual Private Gateway (VGW) enables communication between an on-premises network and a cloud-based Virtual Private Cloud (VPC).","title":"Virtual Private Gateway (VGW)"},{"location":"elb/","text":"Load Balancers Elastic Load Balancer (ELB) The main function of an ELB is to help manage and control the flow of inbound requests destined to a group of targets by distributing these requests evenly accross the targeted resource group. These targets could be a group of EC2s, lambda functions, a range of IP addresses or even Containers. Application Load Balancer A load balancer serves as the single point of contact for clients. The load balancer distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones. This increases the availability of your application. You add one or more listeners to your load balancer. You can set port for HTTP or HTTPS requests in your ALB. It operates at the request level. You also have Advanced routing, TLS termination and visibility features targeted at application architectures. Network Load Balancer Ultra-high performance while maintaining very low latencies Operates at the connection level, routing traffic to targets within your VPC Handles millions of requests per second Route-Based Load Balancing (Path-Based Routing): Route-based load balancing (also called path-based routing) distributes traffic to different target groups based on the request URL path. The load balancer inspects the URL path of the incoming HTTP(S) request. Based on the path, it routes the traffic to a specific target group or service. Example: Requests to example.com/frontend are routed to the frontend servers. Requests to example.com/api are routed to the API servers. In AWS, you can configure path-based routing with an Application Load Balancer (ALB). You would define rules in the load balancer's listener based on URL paths (e.g., /images/ , /api/ ), which then forwards the request to different target groups. Host-Based Load Balancing Host-based load balancing (also called host header-based routing) distributes traffic based on the hostname in the HTTP request. This allows you to direct traffic to different services or applications based on the domain or subdomain. The load balancer inspects the Host header of the incoming HTTP(S) request. Example: A company has multiple domains or subdomains - www.example.com for the main website. api.example.com for their API. Requests to www.example.com go to the web servers. Requests to api.example.com go to the API servers. Classic Load Balancer Used for applications that were build in the existing EC2 Classic Environment Operates at both the connection and request level ELB Components Listeners: The rules that you define for a listener determine how the load balancer routes requests to its registered targets. Each rule consists of a priority, one or more actions, and one or more conditions. Target Groups: Each target group routes requests to one or more registered targets, such as EC2 instances, using the protocol and port number that you specify. You can register a target with multiple target groups. You can configure health checks on a per target group basis. Rules: Rules are associated to each listener that you have configured withing your ELB. They help to define how an incoming request gets routed to which target group. Health Checks: A health check is performed against the resources defined within the target group. These health checks allow the ELB to contact each target using a specific protcol to receive a response. Internet-facing ELB: The nodes of the ELB are accessible via the internt and so have a public DNS name that can be resolved to its Public IP address, in addition to an internal IP address. Internal ELB: An internal ELB only has an internal IP address, this means that it can only serve requests that originate from within your VPC itself. ELB Nodes: For each AZ selected an ELB node will be placed within that AZ. SSL Server Certificates IF we set HTTPS as our listener, then it will allow us an encrypted communication channnel to be set up between clients initiating the request and your ALB. But to allow ALB to receive encrypted traffic over HTTPS it will need a server certificate and an associated security policy. SSL (Secure Sockets Layer) is a cryptography protocol, much like TLS (Transport Layer Security). Both SSL and TSL are used interchangebly when discussing certificates on your ALB. The server certificate used by ALB is an X.509 certificate, which is a digital ID provisioned by AWS Certificate Manager (ACM). Network Load Balancer The network load balancer operates at layer 4 of the OSI model enabling you to balance requests purely based upon the TCP protocol. The NLB can process requests in TCP, TLS, and UDP. It is able to process millions of requests per second which makes it ideal for high performance applications. If your application logic requires a static IP address, then NLB will need to be your choice of ELB. EC2 Auto Scaling Auto scaling is the mechanism that allows you to increase or decrease your EC2 resources to meet the demand based off of custom defined metrics and thresholds. Auto Scaling in AWS Amazon EC2 Auto Scaling AWS Auto Scaling - Can automatically scale - Amazon ECS, DynamoDB, Amazon Aurora Components of EC2 Auto Scaling Create a Launch Configuration or Launch Template - These define how an Auto Scaling group builds new EC2 instances. Create an Auto Scaling group Launch Configuration Which AMI to use What Instance type If you would like to use Spot Instances If and when Public IP Addresses should be used If any user data is on first boot What storage volume configuration should be used What security groups should be applied Launch Template A launch template is essentially a newer and more advanced version of the launch configuration. Being a template you can build a standard configuration allowing you to simplify how you launch instances for your auto scaling groups. This is the preferred method. Auto Scaling Groups The auto scaling group defines: The required capacity and other limitations of the group using scaling policies Where the group should scale resources, such as which AZ","title":"AWS Load Balancers"},{"location":"elb/#load-balancers","text":"","title":"Load Balancers"},{"location":"elb/#elastic-load-balancer-elb","text":"The main function of an ELB is to help manage and control the flow of inbound requests destined to a group of targets by distributing these requests evenly accross the targeted resource group. These targets could be a group of EC2s, lambda functions, a range of IP addresses or even Containers.","title":"Elastic Load Balancer (ELB)"},{"location":"elb/#application-load-balancer","text":"A load balancer serves as the single point of contact for clients. The load balancer distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones. This increases the availability of your application. You add one or more listeners to your load balancer. You can set port for HTTP or HTTPS requests in your ALB. It operates at the request level. You also have Advanced routing, TLS termination and visibility features targeted at application architectures.","title":"Application Load Balancer"},{"location":"elb/#network-load-balancer","text":"Ultra-high performance while maintaining very low latencies Operates at the connection level, routing traffic to targets within your VPC Handles millions of requests per second","title":"Network Load Balancer"},{"location":"elb/#route-based-load-balancing-path-based-routing","text":"Route-based load balancing (also called path-based routing) distributes traffic to different target groups based on the request URL path. The load balancer inspects the URL path of the incoming HTTP(S) request. Based on the path, it routes the traffic to a specific target group or service. Example: Requests to example.com/frontend are routed to the frontend servers. Requests to example.com/api are routed to the API servers. In AWS, you can configure path-based routing with an Application Load Balancer (ALB). You would define rules in the load balancer's listener based on URL paths (e.g., /images/ , /api/ ), which then forwards the request to different target groups.","title":"Route-Based Load Balancing (Path-Based Routing):"},{"location":"elb/#host-based-load-balancing","text":"Host-based load balancing (also called host header-based routing) distributes traffic based on the hostname in the HTTP request. This allows you to direct traffic to different services or applications based on the domain or subdomain. The load balancer inspects the Host header of the incoming HTTP(S) request. Example: A company has multiple domains or subdomains - www.example.com for the main website. api.example.com for their API. Requests to www.example.com go to the web servers. Requests to api.example.com go to the API servers.","title":"Host-Based Load Balancing"},{"location":"elb/#classic-load-balancer","text":"Used for applications that were build in the existing EC2 Classic Environment Operates at both the connection and request level","title":"Classic Load Balancer"},{"location":"elb/#elb-components","text":"Listeners: The rules that you define for a listener determine how the load balancer routes requests to its registered targets. Each rule consists of a priority, one or more actions, and one or more conditions. Target Groups: Each target group routes requests to one or more registered targets, such as EC2 instances, using the protocol and port number that you specify. You can register a target with multiple target groups. You can configure health checks on a per target group basis. Rules: Rules are associated to each listener that you have configured withing your ELB. They help to define how an incoming request gets routed to which target group. Health Checks: A health check is performed against the resources defined within the target group. These health checks allow the ELB to contact each target using a specific protcol to receive a response. Internet-facing ELB: The nodes of the ELB are accessible via the internt and so have a public DNS name that can be resolved to its Public IP address, in addition to an internal IP address. Internal ELB: An internal ELB only has an internal IP address, this means that it can only serve requests that originate from within your VPC itself. ELB Nodes: For each AZ selected an ELB node will be placed within that AZ.","title":"ELB Components"},{"location":"elb/#ssl-server-certificates","text":"IF we set HTTPS as our listener, then it will allow us an encrypted communication channnel to be set up between clients initiating the request and your ALB. But to allow ALB to receive encrypted traffic over HTTPS it will need a server certificate and an associated security policy. SSL (Secure Sockets Layer) is a cryptography protocol, much like TLS (Transport Layer Security). Both SSL and TSL are used interchangebly when discussing certificates on your ALB. The server certificate used by ALB is an X.509 certificate, which is a digital ID provisioned by AWS Certificate Manager (ACM).","title":"SSL Server Certificates"},{"location":"elb/#network-load-balancer_1","text":"The network load balancer operates at layer 4 of the OSI model enabling you to balance requests purely based upon the TCP protocol. The NLB can process requests in TCP, TLS, and UDP. It is able to process millions of requests per second which makes it ideal for high performance applications. If your application logic requires a static IP address, then NLB will need to be your choice of ELB.","title":"Network Load Balancer"},{"location":"elb/#ec2-auto-scaling","text":"Auto scaling is the mechanism that allows you to increase or decrease your EC2 resources to meet the demand based off of custom defined metrics and thresholds.","title":"EC2 Auto Scaling"},{"location":"elb/#auto-scaling-in-aws","text":"Amazon EC2 Auto Scaling AWS Auto Scaling - Can automatically scale - Amazon ECS, DynamoDB, Amazon Aurora","title":"Auto Scaling in AWS"},{"location":"elb/#components-of-ec2-auto-scaling","text":"Create a Launch Configuration or Launch Template - These define how an Auto Scaling group builds new EC2 instances. Create an Auto Scaling group","title":"Components of EC2 Auto Scaling"},{"location":"elb/#launch-configuration","text":"Which AMI to use What Instance type If you would like to use Spot Instances If and when Public IP Addresses should be used If any user data is on first boot What storage volume configuration should be used What security groups should be applied","title":"Launch Configuration"},{"location":"elb/#launch-template","text":"A launch template is essentially a newer and more advanced version of the launch configuration. Being a template you can build a standard configuration allowing you to simplify how you launch instances for your auto scaling groups. This is the preferred method.","title":"Launch Template"},{"location":"elb/#auto-scaling-groups","text":"The auto scaling group defines: The required capacity and other limitations of the group using scaling policies Where the group should scale resources, such as which AZ","title":"Auto Scaling Groups"},{"location":"storage/","text":"Storage Fundamentals for AWS AWS provides many services for storing data. Data storage can be divided into categories such as: Block Storage Data is stored in chunks known as blocks Blocks are stored on a volume and attached to a single instance Provide very low latency File Storage Data is stored as seperate files within a series of directories Data is stored on top of a file system Shared access is provided for multiple users Object Storage Objects are stored across a flat address space Objects are referenced by a unique key Each object can also have associated metadata to help categorize and identify the object Overview of Amazon S3 Amazon S3 (Simple Storage Service) is a fully managed Object-based storage service by Amazon, that is - Highly Available Durable Cost Effective Widely Accessible It is a object based storage service so each file uploaded does not belong to hierarchial file system but rather file is stored in a flat path and which is referenced by a unique URL. S3 is also a Regional service. To store object in S3, you first need to define and create a bucket. This bucket name must be completetly unique. By default your account can have upto a 100 buckets but this is a soft limit and a request can be made to increase this. Any object uploaded to the bucket are given a unique object key for identification. EC2 Instance Storage This is also referred to Instance Store Volume. The volumes reside on the same host that provides the EC2 instances itself. The instance storage provides Ephemeral storage for your instance volumes. So it is recommended not to store critical data on these ephemeral volumes. These are the cirumstances where data stored in the EC2 Instance Storage will be lost - Stop Termniate However, if the instance was simply rebooted, the data would remain intact Benefits of EC2 Instance Storage No additional cost for storage Very high I/O speed Optimized instance families Instance store volumes are ideal as a cache or buffer for rapidly changing data without the need for retention Often used within a load balancing group, where data is replicated and pooled between the fleet Amazon Elastic Block Store (EBS) EBS provides storage to EC2 instances with EBS Volume Provides persistent and durable block level storage EBS volumes offer far more flexiblity with regards to managing the data EBS volumes are attached to your EC2 instance and are primiarily used for fast changing data that requires a certain amount of Input/Output operations per second (IOPS). EBS also provides the ability to provide point-in-time backup of the storage, called Snapshots. You can manually create a Snapshot of of your storage or automate it using Amazon CloudWatch. The Snapshots themselves are stored in S3 so that they are very durable and reliable. Snapshots are also incremental meaning they will only copy data that has changed since the previous snapshot was taken. Once you have the snapshot of an EBS volume, you can create a new volume from that snapshot. It is also possible to have Snaposhots in different regions. Two types of EBS volumes available - SSD Backed Storage Suited for work with smaller blocks As boot volumes for EC HDD Backed Storage Suited for workloads that require a higher rate of throughput E.g.: big data and logging information EBS Security If you have sensitive information in your storage, then you can just check the box for 'enable EBS security' and EBS will ensure security using Amazon's AES-256 encryption method and AWS KMS (Key Management System). Any snapshot taken from a encrypted volume would also be encrypted. But it is to be noted that this encryption is only available on selected instance types. Ways to Create EBS Volumes: During the creation of a new instance. You can attach it at the time of launch. From within the EC2 dashboard of the AWS management console. Create it as a standalone volume, ready to be attached to an instance when required. EBS Multi-Attach Normally one EBS can only be attached to only one EC2. But with Multi-Attach one EBS can be attached with multiple EC2. But this is heavily dependent on the type of volume and the type of instance. For the time being Multi-Attach is only available in - Provisioned IOPS SSD (io1) Provisioned IOPS SSD (i02) File Systems It is recommended to use a Clustered File System such as GFS2. This will safely manag multi-instance access to the shared volume. Nitro Systems EC2 instances based on the Nitro Systems can run EC2 on maximum performance. Nitro instances is a requirement for using Multi-Attach. Nitro: The underlying virtualization platform of the EC2 instance. Bare Metal Insances: The nitro also introduces the concept of Bare Metal Instances. That means you can run EC2 instances without any hypervisor or the customer can use their own hypervisor. Amazon Elastic File System (EFS) It is like your typical directory based file system. This also supports low latency file storage. But unlike EBS, it can provide support to multiple file systems. It also has features of traditional file systems such as - locking files, updating files and renaming files. It also has a hierarchial file structure. This type of storage allows you to store files that are accessible to network resources. Hybrid Storage Solution using AWS Storage Gateway AWS Storage Gateway for hybrid storage between on-premises and cloud infrastructure. Deployment Options On-Premises on a Virtual Machine or AWS Storage Gateway Hardware Appliance Deploy it on a AWS EC2 instance using AWS Storage Gateway Management Service When deploying the gateway, it will ask for at least 150MB which will work as the local cache. This will act as - A staging area for data thatthe gateway will upload to AWS A true cache to save data for low-latency access There are four types of storage gateway - S3 File Gateway FSx File Gateway Tape Gateway Volume Gateway AWS Elastic Disaster Recovery System (DRS) AWS Elastic DRS is AWS' service for recovering failed applications. It is more efficient and cost-effective than on premises data recovery systems. AWS DRS supports Recovery Point Objectives (RPOs) of seconds and Recovery Time Objectives (RTOs) of minutes by performing ongoing replication of your source servers' disks to EBS volumes in the AWS cloud.","title":"AWS Storage"},{"location":"storage/#storage-fundamentals-for-aws","text":"AWS provides many services for storing data. Data storage can be divided into categories such as: Block Storage Data is stored in chunks known as blocks Blocks are stored on a volume and attached to a single instance Provide very low latency File Storage Data is stored as seperate files within a series of directories Data is stored on top of a file system Shared access is provided for multiple users Object Storage Objects are stored across a flat address space Objects are referenced by a unique key Each object can also have associated metadata to help categorize and identify the object","title":"Storage Fundamentals for AWS"},{"location":"storage/#overview-of-amazon-s3","text":"Amazon S3 (Simple Storage Service) is a fully managed Object-based storage service by Amazon, that is - Highly Available Durable Cost Effective Widely Accessible It is a object based storage service so each file uploaded does not belong to hierarchial file system but rather file is stored in a flat path and which is referenced by a unique URL. S3 is also a Regional service. To store object in S3, you first need to define and create a bucket. This bucket name must be completetly unique. By default your account can have upto a 100 buckets but this is a soft limit and a request can be made to increase this. Any object uploaded to the bucket are given a unique object key for identification.","title":"Overview of Amazon S3"},{"location":"storage/#ec2-instance-storage","text":"This is also referred to Instance Store Volume. The volumes reside on the same host that provides the EC2 instances itself. The instance storage provides Ephemeral storage for your instance volumes. So it is recommended not to store critical data on these ephemeral volumes. These are the cirumstances where data stored in the EC2 Instance Storage will be lost - Stop Termniate However, if the instance was simply rebooted, the data would remain intact","title":"EC2 Instance Storage"},{"location":"storage/#benefits-of-ec2-instance-storage","text":"No additional cost for storage Very high I/O speed Optimized instance families Instance store volumes are ideal as a cache or buffer for rapidly changing data without the need for retention Often used within a load balancing group, where data is replicated and pooled between the fleet","title":"Benefits of EC2 Instance Storage"},{"location":"storage/#amazon-elastic-block-store-ebs","text":"EBS provides storage to EC2 instances with EBS Volume Provides persistent and durable block level storage EBS volumes offer far more flexiblity with regards to managing the data EBS volumes are attached to your EC2 instance and are primiarily used for fast changing data that requires a certain amount of Input/Output operations per second (IOPS). EBS also provides the ability to provide point-in-time backup of the storage, called Snapshots. You can manually create a Snapshot of of your storage or automate it using Amazon CloudWatch. The Snapshots themselves are stored in S3 so that they are very durable and reliable. Snapshots are also incremental meaning they will only copy data that has changed since the previous snapshot was taken. Once you have the snapshot of an EBS volume, you can create a new volume from that snapshot. It is also possible to have Snaposhots in different regions. Two types of EBS volumes available - SSD Backed Storage Suited for work with smaller blocks As boot volumes for EC HDD Backed Storage Suited for workloads that require a higher rate of throughput E.g.: big data and logging information","title":"Amazon Elastic Block Store (EBS)"},{"location":"storage/#ebs-security","text":"If you have sensitive information in your storage, then you can just check the box for 'enable EBS security' and EBS will ensure security using Amazon's AES-256 encryption method and AWS KMS (Key Management System). Any snapshot taken from a encrypted volume would also be encrypted. But it is to be noted that this encryption is only available on selected instance types.","title":"EBS Security"},{"location":"storage/#ways-to-create-ebs-volumes","text":"During the creation of a new instance. You can attach it at the time of launch. From within the EC2 dashboard of the AWS management console. Create it as a standalone volume, ready to be attached to an instance when required.","title":"Ways to Create EBS Volumes:"},{"location":"storage/#ebs-multi-attach","text":"Normally one EBS can only be attached to only one EC2. But with Multi-Attach one EBS can be attached with multiple EC2. But this is heavily dependent on the type of volume and the type of instance. For the time being Multi-Attach is only available in - Provisioned IOPS SSD (io1) Provisioned IOPS SSD (i02)","title":"EBS Multi-Attach"},{"location":"storage/#file-systems","text":"It is recommended to use a Clustered File System such as GFS2. This will safely manag multi-instance access to the shared volume.","title":"File Systems"},{"location":"storage/#nitro-systems","text":"EC2 instances based on the Nitro Systems can run EC2 on maximum performance. Nitro instances is a requirement for using Multi-Attach. Nitro: The underlying virtualization platform of the EC2 instance. Bare Metal Insances: The nitro also introduces the concept of Bare Metal Instances. That means you can run EC2 instances without any hypervisor or the customer can use their own hypervisor.","title":"Nitro Systems"},{"location":"storage/#amazon-elastic-file-system-efs","text":"It is like your typical directory based file system. This also supports low latency file storage. But unlike EBS, it can provide support to multiple file systems. It also has features of traditional file systems such as - locking files, updating files and renaming files. It also has a hierarchial file structure. This type of storage allows you to store files that are accessible to network resources.","title":"Amazon Elastic File System (EFS)"},{"location":"storage/#hybrid-storage-solution-using-aws-storage-gateway","text":"AWS Storage Gateway for hybrid storage between on-premises and cloud infrastructure.","title":"Hybrid Storage Solution using AWS Storage Gateway"},{"location":"storage/#deployment-options","text":"On-Premises on a Virtual Machine or AWS Storage Gateway Hardware Appliance Deploy it on a AWS EC2 instance using AWS Storage Gateway Management Service When deploying the gateway, it will ask for at least 150MB which will work as the local cache. This will act as - A staging area for data thatthe gateway will upload to AWS A true cache to save data for low-latency access There are four types of storage gateway - S3 File Gateway FSx File Gateway Tape Gateway Volume Gateway","title":"Deployment Options"},{"location":"storage/#aws-elastic-disaster-recovery-system-drs","text":"AWS Elastic DRS is AWS' service for recovering failed applications. It is more efficient and cost-effective than on premises data recovery systems. AWS DRS supports Recovery Point Objectives (RPOs) of seconds and Recovery Time Objectives (RTOs) of minutes by performing ongoing replication of your source servers' disks to EBS volumes in the AWS cloud.","title":"AWS Elastic Disaster Recovery System (DRS)"}]}